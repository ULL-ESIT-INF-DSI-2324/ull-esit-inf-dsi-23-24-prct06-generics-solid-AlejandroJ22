{"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-AlejandroJ22/src/ejercicios_pe/ejercicio.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-AlejandroJ22/src/ejercicios_pe/ejercicio.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":57}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":48}},"4":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"5":{"start":{"line":30,"column":12},"end":{"line":30,"column":83}},"6":{"start":{"line":31,"column":12},"end":{"line":31,"column":28}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":48}},"8":{"start":{"line":39,"column":8},"end":{"line":39,"column":40}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":48}},"10":{"start":{"line":55,"column":8},"end":{"line":55,"column":43}},"11":{"start":{"line":56,"column":8},"end":{"line":56,"column":71}},"12":{"start":{"line":64,"column":28},"end":{"line":64,"column":30}},"13":{"start":{"line":65,"column":8},"end":{"line":69,"column":11}},"14":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"15":{"start":{"line":67,"column":16},"end":{"line":67,"column":44}},"16":{"start":{"line":70,"column":8},"end":{"line":70,"column":29}},"17":{"start":{"line":73,"column":0},"end":{"line":73,"column":66}},"18":{"start":{"line":84,"column":8},"end":{"line":84,"column":42}},"19":{"start":{"line":85,"column":8},"end":{"line":85,"column":69}},"20":{"start":{"line":94,"column":28},"end":{"line":94,"column":30}},"21":{"start":{"line":95,"column":8},"end":{"line":99,"column":11}},"22":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"23":{"start":{"line":97,"column":16},"end":{"line":97,"column":44}},"24":{"start":{"line":100,"column":8},"end":{"line":100,"column":29}},"25":{"start":{"line":103,"column":0},"end":{"line":103,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":38},"end":{"line":15,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":21},"end":{"line":22,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":19},"end":{"line":34,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":17},"end":{"line":40,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":23},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":45},"end":{"line":57,"column":5}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":17},"end":{"line":71,"column":5}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":65,"column":49},"end":{"line":65,"column":50}},"loc":{"start":{"line":65,"column":62},"end":{"line":69,"column":9}},"line":65},"8":{"name":"(anonymous_8)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":44},"end":{"line":86,"column":5}},"line":83},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":17},"end":{"line":101,"column":5}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":95,"column":48},"end":{"line":95,"column":49}},"loc":{"start":{"line":95,"column":61},"end":{"line":99,"column":9}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},{"start":{"line":29,"column":8},"end":{"line":32,"column":9}}],"line":29},"1":{"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":57}},"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":21}},{"start":{"line":29,"column":25},"end":{"line":29,"column":57}}],"line":29},"2":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{"line":66,"column":12},"end":{"line":68,"column":13}}],"line":66},"3":{"loc":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":12},"end":{"line":98,"column":13}}],"line":96}},"s":{"0":1,"1":1,"2":14,"3":5,"4":7,"5":0,"6":0,"7":7,"8":3,"9":15,"10":7,"11":7,"12":4,"13":4,"14":20,"15":4,"16":4,"17":1,"18":7,"19":7,"20":3,"21":3,"22":8,"23":3,"24":3,"25":1},"f":{"0":14,"1":5,"2":7,"3":3,"4":15,"5":7,"6":4,"7":20,"8":7,"9":3,"10":8},"b":{"0":[0,7],"1":[7,7],"2":[4,16],"3":[3,5]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-AlejandroJ22/src/ejercicios_pe/ejercicio.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-AlejandroJ22/src/ejercicios_pe/ejercicio.ts"],"names":[],"mappings":";;;AAmBA;;GAEG;AACH,MAAe,oBAAoB;IAKd;IAJnB;;;OAGG;IACH,YAAmB,oBAAyB;QAAzB,yBAAoB,GAApB,oBAAoB,CAAK;IAAG,CAAC;IAChD;;;OAGG;IACH,OAAO,CAAC,OAAU;QAChB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IACD;;;;OAIG;IACH,OAAO,CAAC,KAAa;QACnB,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;YACvE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,8CAA8C;QACjE,CAAC;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD;;OAEG;IACH,UAAU;QACR,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC;IAClC,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;IAC1C,CAAC;CAEF;AAED;;GAEG;AACH,MAAa,2BAA4B,SAAQ,oBAA4B;IAMxD;IAJnB;;;OAGG;IACH,YAAmB,2BAAqC;QACtD,KAAK,CAAC,2BAA2B,CAAC,CAAC;QADlB,gCAA2B,GAA3B,2BAA2B,CAAU;IAExD,CAAC;IACD;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,IAAI,aAAa,GAAa,EAAE,CAAC;QACjC,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACnD,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;gBACrB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAA;QACF,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AAvBD,kEAuBC;AACD;;GAEG;AACH,MAAa,0BAA2B,SAAQ,oBAA4B;IAMvD;IAJnB;;;OAGG;IACH,YAAmB,0BAAoC;QACrD,KAAK,CAAC,0BAA0B,CAAC,CAAC;QADjB,+BAA0B,GAA1B,0BAA0B,CAAU;IAEvD,CAAC;IACD;;;;;OAKG;IACH,MAAM,CAAC,IAAY;QACjB,IAAI,aAAa,GAAa,EAAE,CAAC;QACjC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAChD,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;gBACrD,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;QACL,CAAC,CAAC,CAAA;QACF,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AAxBD,gEAwBC;AAED,2EAA2E;AAC3E,uDAAuD;AACvD,8CAA8C;AAC9C,+CAA+C;AAC/C,uDAAuD;AACvD,8CAA8C;AAC9C,iDAAiD;AACjD,uDAAuD;AACvD,8CAA8C;AAE9C,uFAAuF;AACvF,sDAAsD;AACtD,oEAAoE;AACpE,qEAAqE;AACrE,sDAAsD;AACtD,wDAAwD;AACxD,gDAAgD;AAChD,sDAAsD;AACtD,wDAAwD","sourcesContent":["/**\n * Interfaz de colecciones de cualquier tipo que implementan \n * las funciones addItem, getItem, removeItem y getNumberOfItems\n */\nexport interface Collectable<T> {\n  addItem(newitem: T): void; // Añade un item al final de la cola.\n  getItem(index: number): T; // Devuelve el ultimo item de la cola\n  removeItem(): void; // Elimina el último item\n  getNumberOfItems(): number; // Devuelve el numero de items en el array\n}\n\n/**\n * Interfaz de colecciones en las que hay un metodo search que devuelve un \n * array del mismo tipo, que el elemento que se busca.\n */\nexport interface Searchable<T> extends Collectable<T> {\n  search(filter: T): T[];\n}\n\n/**\n * Clase abstacta de colección de elementos de cualquier tipo en las que se puede buscar un elemento\n */\nabstract class SearchableCollection<T> implements Searchable<T> {\n  /**\n   * \n   * @param searchableCollection array de los elementos\n   */\n  constructor(public searchableCollection: T[]) {}\n  /**\n   * Añade el item al final del array.\n   * @param newitem item a añadir\n   */\n  addItem(newitem: T): void {\n    this.searchableCollection.push(newitem);\n  }\n  /**\n   * Devuelve un elemento del array según el indice\n   * @param index indice\n   * @returns elemento en el indice.\n   */\n  getItem(index: number): T {\n    if (index < 0 || index >= this.getNumberOfItems()) {\n      console.log(\"Error, la posición a la que trata de acceder no existe.\");\n      process.exit(1); // Termina el programa con un código de error.\n    }\n    return this.searchableCollection[index];\n  }\n  /**\n   * Elimina el último eleemtno del array.\n   */\n  removeItem(): void {\n    this.searchableCollection.pop();\n  }\n  getNumberOfItems(): number {\n    return this.searchableCollection.length;\n  }\n  abstract search(filter: T): T[];\n}\n\n/**\n * Clase de colección de number en las que se puede buscar un elemento\n */\nexport class NumericSearchableCollection extends SearchableCollection<number>\n{\n  /**\n   * \n   * @param numericSearchableCollection array de number.\n   */\n  constructor(public numericSearchableCollection: number[]) {\n    super(numericSearchableCollection);\n  }\n  /**\n   * Función para buscar coincidencias con un número.\n   * @param item numero a buscar.\n   * @returns array de number coincidentes.\n   */\n  search(item: number): number[] {\n    let conincidences: number[] = [];\n    this.numericSearchableCollection.forEach((element) => {\n      if (element === item) {\n        conincidences.push(element);\n      }\n    })\n    return conincidences;\n  }\n}\n/**\n * Clase de colección de strings en las que se puede buscar un elemento\n */\nexport class StringSearchableCollection extends SearchableCollection<string>\n{\n  /**\n   * \n   * @param stringSearchableCollection array de strings\n   */\n  constructor(public stringSearchableCollection: string[]) {\n    super(stringSearchableCollection);\n  }\n  /**\n   * Función que busca cadenas de las que forme parte la \n   * cadena que se le pasa como parametro.\n   * @param item cadena a buscar.\n   * @returns array con las coincidencias de la substring.\n   */\n  search(item: string): string[] {\n    let conincidences: string[] = [];\n    this.stringSearchableCollection.forEach((element) => {\n        if (element.toLowerCase().includes(item.toLowerCase())) {\n            conincidences.push(element);\n        }\n    })\n    return conincidences;\n  }\n}\n\n// let myNumericCollection = new NumericSearchableCollection([1, 2, 3, 4]);\n// console.log(myNumericCollection.getNumberOfItems());\n// console.log(myNumericCollection.search(5));\n// console.log(myNumericCollection.addItem(5));\n// console.log(myNumericCollection.getNumberOfItems());\n// console.log(myNumericCollection.search(5));\n// console.log(myNumericCollection.removeItem());\n// console.log(myNumericCollection.getNumberOfItems());\n// console.log(myNumericCollection.search(5));\n\n// let myStringCollection = new StringSearchableCollection([\"desarrollo\", \"sistemas\"]);\n// console.log(myStringCollection.getNumberOfItems());\n// console.log(myStringCollection.search(\"desarrollo de sistemas\"));\n// console.log(myStringCollection.addItem(\"desarrollo de sistemas\"));\n// console.log(myStringCollection.getNumberOfItems());\n// console.log(myStringCollection.search(\"desarrollo\"));\n// console.log(myStringCollection.removeItem());\n// console.log(myStringCollection.getNumberOfItems());\n// console.log(myStringCollection.search(\"desarrollo\"));"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e90f118936815573874ac51731a2532f8b0cf9b","contentHash":"5c1d4b2c9779758abae985a5457ef8576c4d10488cca92f9bc2fcf85f6db04dc"}}